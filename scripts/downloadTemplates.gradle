
//tag::initArc42DE[]
task downloadTemplate(
    description: 'Download a specified template and install it',
    group: 'docToolchain'
) {
    doFirst {
        println "Install arc42 documentation template."
        println "For more information about arc42 see https://arc42.org"
        def lang = ant.input(message: "Which language do you want to install?", validargs: 'EN,DE,ES,RU', addproperty: 'lang')
        def help = ant.input(message: "Do you want the template with or without help?", validargs: 'withhelp,plain', addproperty: 'help')
    }
    doLast {
        def targetDir = new File(new File(docDir, inputPath), 'arc42')
        targetDir.mkdirs()
        download {
            src 'https://github.com/arc42/arc42-template/raw/master/dist/arc42-template-' + ant.lang + '-' + ant.help + '-asciidoc.zip'
            dest new File(targetDir, 'arc42.zip')
        }
        copy {
            from zipTree(new File(targetDir, 'arc42.zip'))
            into targetDir
        }
        delete {
            delete new File(targetDir, 'arc42.zip')
        }
        //re-organize content
        new File(targetDir, 'src').renameTo(new File(targetDir, 'chapters'))
        new File(targetDir, 'arc42-template.adoc').renameTo(new File(targetDir, 'arc42.adoc'))
        def mainDoc = new File(targetDir,'arc42.adoc')
        mainDoc.write(mainDoc.text.replaceAll('src/','chapters/'))
        //add arc42.doc to config
        def configFile = new File(docDir, mainConfigFile)
        configFile.write(
            configFile.text
                .replaceAll('/[*]{2} inputFiles [*]{2}/',
                            "[file: 'arc42/arc42.adoc', formats: ['html','pdf']],\n\t/** inputFiles **/")
                .replaceAll('/[*]{2} imageDirs [*]{2}/',
                            "'arc42/images/.',\n\t/** imageDirs **/")
        )
        println "arc42 template unpacked into ${targetDir}"
        println "added template to ${mainConfigFile}"
        println "use 'generateHTML' or 'generatePDF' to convert the template"

    }
}
//end::downloadTemplate[]
task installTemplate(
    description: 'alias for downloadTemplate',
    group: 'docToolchain',
    dependsOn: [downloadTemplate]
) {}
